# 🤖 Excel Management Bot
**Advanced Telegram Bot for Excel Data 
Management** [![Python 
Version](https://img.shields.io/badge/python-3.8+-blue.svg)](https://python.org) 
[![Telegram Bot 
API](https://img.shields.io/badge/Telegram%20Bot%20API-Latest-blue.svg)](https://core.telegram.org/bots) 
[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE) 
[![Made with 
❤️](https://img.shields.io/badge/Made%20with-❤️-red.svg)](https://github.com)
## 📋 Overview
A powerful Telegram bot designed for seamless 
Excel data management with beautiful graphical 
interface, advanced search capabilities, field 
management, statistical analysis, and 
professional Excel file generation. Perfect for 
managers and teams who need efficient data 
handling through a simple yet robust interface.
## ✨ Key Features
### 📊 **Data Management**
- ➕ **Add Records**: Create new entries with 
field validation - ✏️ **Edit Records**: Modify 
existing data with row and field selection - 🗑️ 
**Delete Records**: Remove individual or all 
records with confirmation - 📋 **View Records**: 
Display data with pagination and formatting
### 🔍 **Advanced Search**
- 🎯 **Field-Specific Search**: Search within 
specific columns - 🌐 **Global Search**: Search 
across all fields simultaneously - 🔦 **Keyword 
Highlighting**: Visual emphasis on search terms - 
📈 **Results Analytics**: Detailed search result 
statistics
### ⚙️ **Field Management**
- ➕ **Add Fields**: Dynamically create new 
columns - 🗑️ **Remove Fields**: Delete unwanted 
columns with data protection - 📋 **View 
Fields**: Display current field structure - 🔄 
**Reset to Default**: Restore original field 
configuration
### 🎨 **Theme System**
- 🔵 **Blue Theme**: Professional corporate style 
- 🟢 **Green Theme**: Nature-inspired design - 🟣 
**Purple Theme**: Creative and modern look - 🔴 
**Red Theme**: Bold and energetic style - 🟠 
**Orange Theme**: Warm and friendly appearance
### 📁 **Excel Export**
- 📊 **Professional Formatting**: Beautiful 
charts and styling - 🎨 **Theme-Based Colors**: 
Consistent visual identity - 📐 **Auto-Column 
Sizing**: Optimized layout for readability - ❄️ 
**Frozen Headers**: Enhanced navigation 
experience - 💾 **Timestamped Files**: Organized 
file management
### 📈 **Analytics & Statistics**
- 📊 **Record Count**: Total data entries 
tracking - 📋 **Field Statistics**: Column 
analysis and metrics - 💾 **File Size 
Monitoring**: Storage usage tracking - ⏰ 
**Real-time Updates**: Live system status - 👤 
**User Preferences**: Personalized settings 
tracking
### 🛡️ **Data Validation & Security**
- ✅ **Input Validation**: Automatic data type 
checking - 🔢 **Numeric Fields**: Integer 
validation for IDs and codes - 📱 **Phone 
Numbers**: Format verification - 👤 **Age 
Validation**: Range checking (0-150) - 🔒 **Data 
Integrity**: Consistent data structure 
maintenance
## 🚀 Installation & Setup
### Prerequisites
```bash Python 3.8+ pip package manager Telegram 
Bot Token (from @BotFather) ```
### 1️⃣ Clone Repository
```bash git clone 
https://github.com/yourusername/excel-management-bot.git 
cd excel-management-bot ```
### 2️⃣ Install Dependencies
```bash pip install python-telegram-bot pandas 
openpyxl ```
### 3️⃣ Configuration
Edit `config.py` and add your bot token: 
```python TOKEN = "YOUR_BOT_TOKEN_HERE" # Replace 
with your actual token ```
### 4️⃣ Run the Bot
```bash python run_bot.py ```
## 📱 User Interface
### 🏠 Main Menu
``` ➕ اضافه کردن 📋 نمایش همه 📁 دریافت فایل ✏️ 
ویرایش 🗑️ حذف 🔍 جستجو ⚙️ مدیریت فیلدها 🎨 تغییر تم 
📊 آمار 🧹 حذف همه ℹ️ راهنما ```
### 📋 Default Fields
- 👤 Name (نام) - 👨‍👩‍👧‍👦 Family Name (نام 
خانوادگی) - 🎂 Age (سن) - 💼 Job (شغل) - 🆔 
National ID (کد ملی) - 📞 Phone Number (شماره 
تلفن) - ✉️ Email (ایمیل) - 📮 Postal Code (کد 
پستی) - 🏠 Home Address (آدرس منزل) - 💳 Bank 
Card Number (شماره کارت بانکی) - 📅 Birth Date 
(تاریخ تولد) - 💑 Marital Status (وضعیت تاهل)
## 🛠️ Technical Architecture
### 📁 Project Structure
``` 📂 excel-management-bot/ ├── 📄 config.py # 
Configuration settings ├── 📄 utils.py # Utility 
functions ├── 📄 main1.py # Core bot functions 
(Part 1) ├── 📄 run_bot.py # Main execution file 
├── 📄 data.xlsx # Excel data file 
(auto-generated) ├── 📄 fields.json # Custom 
fields configuration ├── 📄 bot.log # System logs 
└── 📄 theme_*.json # User theme preferences ```
### 🔧 Core Technologies
- **🐍 Python 3.8+**: Primary programming 
language - **🤖 python-telegram-bot**: Telegram 
Bot API wrapper - **📊 pandas**: Data 
manipulation and analysis - **📈 openpyxl**: 
Excel file creation and formatting - **📝 JSON**: 
Configuration and data storage - **📋 logging**: 
System monitoring and debugging
### 🔄 Bot States
```python ADD_DATA = 0 # Adding new record 
EDIT_ROW = 1 # Selecting row to edit EDIT_FIELD = 
2 # Selecting field to edit EDIT_VALUE = 3 # 
Entering new value DELETE_ROW = 4 # Confirming 
record deletion SEARCH_FIELD = 5 # Selecting 
search field SEARCH_VALUE = 6 # Entering search 
keyword FIELD_MANAGEMENT = 7 # Managing fields 
menu ADD_FIELD = 8 # Adding new field 
DELETE_FIELD = 9 # Deleting existing field 
CONFIRM_DELETE_ALL = 10 # Confirming mass 
deletion ```
## 📊 Features Deep Dive
### 🔍 Search Functionality
- **Field-Specific Search**: Target specific 
columns for precise results - **Global Search**: 
Comprehensive search across all data fields - 
**Case-Insensitive**: Flexible text matching - 
**Keyword Highlighting**: Visual emphasis on 
found terms - **Result Pagination**: Manageable 
result display (max 5 per page)
### 📝 Data Validation
- **Numeric Fields**: Automatic validation for 
IDs, phone numbers, and codes - **Age 
Validation**: Range checking between 0-150 years 
- **Required Fields**: Prevents empty data entry 
- **Format Consistency**: Maintains data 
structure integrity
### 🎨 Theme System
Each theme includes: - **Header Colors**: 
Professional title styling - **Row Alternation**: 
Enhanced readability with alternating colors - 
**User Persistence**: Individual theme 
preferences saved per user - **Real-time 
Application**: Instant theme switching with 
preview
### 📈 Analytics Dashboard
- **📊 Record Statistics**: Total entries and 
growth tracking - **📋 Field Analysis**: Column 
structure and usage metrics - **💾 Storage 
Monitoring**: File size and optimization 
suggestions - **⏰ System Status**: Real-time bot 
performance indicators - **👤 User Activity**: 
Personalization and usage patterns
## 🔧 Configuration Options
### 📋 Field Customization
```python DEFAULT_FIELDS = [ "نام", "نام 
    خانوادگی", "سن", "شغل", "کد ملی", "شماره 
    تلفن", "ایمیل", "کد پستی", "آدرس منزل", 
    "شماره کارت بانکی", "تاریخ تولد", "وضعیت 
    تاهل"
] ```
### 🎨 Theme Configuration
```python THEMES = { "blue": {"name": "آبی", 
    "header": "1F4E79", "row1": "D9E2F3", "row2": 
    "F2F2F2"}, "green": {"name": "سبز", "header": 
    "0D5016", "row1": "E2F0D9", "row2": 
    "F2F2F2"},
    # ... additional themes
}
```
### ⚙️ System Settings
```python MAX_DISPLAY_RECORDS = 10 # Records per 
page MAX_SEARCH_RESULTS = 5 # Search results per 
page LOG_FILE = "bot.log" # System log location 
```
## 📚 Usage Examples
### 🆕 Adding a New Record
1. Select ➕ **اضافه کردن** from main menu 2. 
Enter data for each field step by step 3. Bot 
validates each input automatically 4. 
Confirmation message upon successful save
### 🔍 Searching Data
1. Select 🔍 **جستجو** from main menu 2. Choose 
specific field or "all fields" 3. Enter search 
keyword 4. Review highlighted results with 
pagination
### 🎨 Changing Theme
1. Select 🎨 **تغییر تم** from main menu 2. 
Choose from 5 available themes 3. Instant preview 
and application 4. Theme preference saved 
automatically
### 📊 Viewing Statistics
1. Select 📊 **آمار** from main menu 2. View 
comprehensive system analytics 3. Monitor data 
growth and usage patterns 4. Check file size and 
performance metrics
## 🚀 Advanced Features
### 🔄 Backup System
- **Automatic Timestamping**: Every export 
includes timestamp - **Data Integrity**: 
Consistent formatting across all exports - 
**Multiple Format Support**: Excel with advanced 
styling - **Version Control**: Track data changes 
through export history
### 🛡️ Error Handling
- **Graceful Degradation**: System continues 
operation during errors - **Comprehensive 
Logging**: Detailed error tracking and debugging 
- **User-Friendly Messages**: Clear error 
communication - **Recovery Mechanisms**: 
Automatic data recovery procedures
### 🔧 Maintenance Tools
- **Log Rotation**: Automatic log file management 
- **Data Cleanup**: Remove temporary files and 
optimize storage - **Performance Monitoring**: 
Track bot response times and efficiency - 
**Health Checks**: Regular system status 
verification
## 🤝 Contributing
### 🔧 Development Setup
1. Fork the repository 2. Create a feature branch 
3. Make your changes 4. Add tests if applicable 
5. Submit a pull request
### 📝 Code Style
- Follow PEP 8 guidelines - Use descriptive 
variable names - Add comments for complex logic - 
Maintain consistent formatting
### 🐛 Bug Reports
Please include: - **Environment**: Python 
version, OS, bot version - **Steps to 
Reproduce**: Detailed reproduction steps - 
**Expected Behavior**: What should happen - 
**Actual Behavior**: What actually happens - 
**Screenshots**: Visual evidence if applicable
## 📞 Support & Contact
### 🆘 Getting Help
- **Documentation**: Check this README first - 
**Issues**: Use GitHub Issues for bug reports - 
**Discussions**: GitHub Discussions for questions 
- **Wiki**: Additional documentation and 
tutorials
### 🔧 Troubleshooting
#### Common Issues:
- **Token Error**: Verify bot token in config.py 
- **Permission Error**: Check file write 
permissions - **Import Error**: Ensure all 
dependencies are installed - **Memory Error**: 
Monitor file sizes and optimize data
## 📄 License
This project is licensed under the MIT License - 
see the [LICENSE](LICENSE) file for details.
## 🙏 Acknowledgments
- **Telegram Bot API**: For providing excellent 
bot platform - **Python Community**: For amazing 
libraries and tools - **pandas**: For powerful 
data manipulation capabilities - **openpyxl**: 
For Excel file handling and formatting - **Open 
Source Community**: For inspiration and 
contributions
## 📈 Roadmap
### 🔮 Upcoming Features
- 📊 **Advanced Charts**: Data visualization and 
reporting - 🔗 **API Integration**: Connect with 
external services - 🌐 **Multi-language**: 
Support for additional languages - 📱 **Mobile 
Optimization**: Enhanced mobile experience - ☁️ 
**Cloud Backup**: Automatic cloud data 
synchronization
### 🎯 Version History
- **v2.0**: Complete rewrite with advanced 
features - **v1.5**: Theme system and field 
management - **v1.0**: Basic Excel management 
functionality --- **Made with ❤️ by Mohammad 
Kazemi** *Professional Telegram Bot Developer* 📧 
**Contact**: [Your Email] 💼 **LinkedIn**: [Your 
LinkedIn] 🐙 **GitHub**: [Your GitHub] ---
⭐ **Star this repository if you find it helpful!**
